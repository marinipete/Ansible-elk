input {
    beats {
        port => "5044"
    }
}

filter {
  # WLS Sdout Log
  if "wls-out" in [tags] {
    grok {
      patterns_dir => "./patterns"
      match => [ "message", "<%{WLS_SERVERLOG_DATE:wls_timestamp}%{SPACE}%{DATA:out_timezone}>%{SPACE}<%{LOGLEVEL:wls_level}>%{SPACE}<%{NOTSPACE:wls_subsystem}>%{SPACE}<%{DATA:wls_code}>%{SPACE}<%{GREEDYDATA:wls_message}>" ]
    }
    # Converting BRT to Brazil/East
    translate {
      field       => 'out_timezone'
      destination => 'out_timezone'
      fallback => '%{out_timezone}'
      override => "true"
      dictionary => {
        "BRT"         => "Brazil/East"
        "BRST"        => "Brazil/East"
     }
    }
    date {
      match => [ "wls_timestamp", "dd/MM/yyyy HH'h'mm'min'ss's'"]
      locale => "pt-BR"
      timezone => "%{out_timezone}"
      target => "wls_timestamp"
    }
    mutate {
       remove_field => ['out_timezone' , 'message']
    }
  }

  # WLS Server Log
  if "wls-log" in [tags] {
    grok {
      patterns_dir => "./patterns"
      match => [ "message", "####<%{WLS_SERVERLOG_DATE:wls_timestamp}%{SPACE}%{DATA:wls_timezone}>%{SPACE}<%{LOGLEVEL:wls_level}>%{SPACE}<%{DATA:wls_subsystem}>%{SPACE}<%{DATA:wls_host}>%{SPACE}<%{DATA:wls_server}>%{SPACE}<%{DATA:wls_thread}>%{SPACE}<%{GREEDYDATA:wls_user}>%{SPACE}<%{DATA:wls_transactionid}>%{SPACE}<%{DATA:wls_diagcontid}>%{SPACE}<%{DATA:wls_rawtime}>%{SPACE}<%{DATA:wls_code}>%{SPACE}<%{GREEDYDATA:wls_message}>" ]
    }
    # Converting BRT to Brazil/East
    translate {
      field       => 'wls_timezone'
      destination => 'wls_timezone'
      fallback => '%{wls_timezone}'
      override => "true"
      dictionary => {
        "BRT"         => "Brazil/East"
        "BRST"        => "Brazil/East"
     }
    }
    date {
      match => [ "wls_timestamp", "dd/MM/yyyy HH'h'mm'min'ss's'"]
      locale => "pt-BR"
      timezone => "%{wls_timezone}"
      target => "wls_timestamp"
    }
    mutate {
       remove_field => [ 'wls_timezone' , 'message', 'wls_host', 'wls_rawtime', 'wls_diagcontid']
    }
  }


  # WLS Access Log
  if "wls-access" in [tags] {
    grok {
    patterns_dir=>"./patterns"
      match => [ "message", "%{IPV4:acc_client}\s+%{ACCESSDATE:acc_date}\s+%{TIME:acc_time}\s+%{WORD:acc_method}\s+%{URIPATHPARAM:acc_uri}\s+%{NUMBER:acc_status}\s+%{NUMBER:acc_bytes}\s+%{NUMBER:acc_response_time}" ]
    }
    mutate {
      replace => ['wls_timestamp', '%{acc_date} %{acc_time}']
    }
    date {
      match => [ "wls_timestamp" , "yyyy-MM-dd HH:mm:ss" ]
      target => "wls_timestamp"
      timezone => "Brazil/East"
    }
    mutate {
       remove_field => [ 'acc_date', 'acc_time', 'message', 'acc_bytes']
    }
    if [acc_status] == "200" {
        mutate {
    replace => { "wls_level" => "Warning" }
      }
    }
  }

  # WLS Server Log (Loja)
  if "wls-log-loja" in [tags] {
    grok {
      patterns_dir => "./patterns"
      match => [ "message", "####<%{WLS_SERVERLOG_LOJA_DATE:wls_timestamp}%{SPACE}%{DATA:wls_timezone}>%{SPACE}<%{LOGLEVEL:wls_level}>%{SPACE}<%{DATA:wls_subsystem}>%{SPACE}<%{DATA:wls_host}>%{SPACE}<%{DATA:wls_server}>%{SPACE}<%{DATA:wls_thread}>%{SPACE}<%{GREEDYDATA:wls_user}>%{SPACE}<%{DATA:wls_transactionid}>%{SPACE}<%{DATA:wls_diagcontid}>%{SPACE}<%{DATA:wls_rawtime}>%{SPACE}<%{DATA:wls_code}>%{SPACE}<%{GREEDYDATA:wls_message}>" ]
    }
    # Converting BRT to Brazil/East
    translate {
      field       => 'wls_timezone'
      destination => 'wls_timezone'
      fallback => '%{wls_timezone}'
      override => "true"
      dictionary => {
        "BRT"         => "Brazil/East"
        "BRST"        => "Brazil/East"
     }
    }
    date {
      match => [ "wls_timestamp", "MMM d, yyyy h:mm:ss a"]
      locale => "en-US"
      timezone => "%{wls_timezone}"
      target => "wls_timestamp"
    }
    mutate {
       remove_field => [ 'wls_timezone' , 'message', 'wls_host', 'wls_rawtime', 'wls_diagcontid']
    }
  }

  # WLS Access Log (Loja)
  if "wls-access-loja" in [tags] {
    grok {
    patterns_dir=>"./patterns"
      match => [ "message", "%{IPORHOST:acc_client} - - \[%{HTTPDATE:wls_timestamp}\] \"(?:%{WORD:acc_method} %{NOTSPACE:acc_uri}(?: HTTP/%{NUMBER:acc_httpversion})?|%{DATA:acc_rawrequest})\" %{NUMBER:acc_status} (?:%{NUMBER:acc_bytes}|-)" ]
    }
    #mutate {
    #  replace => ['wls_timestamp', '%{acc_date} %{acc_time}']
    #}
    date {
      match => [ "wls_timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
      target => "wls_timestamp"
      timezone => "Brazil/East"
    }
    mutate {
       remove_field => [ 'message', 'acc_httpversion', 'acc_bytes' ]
    }
    if [acc_status] == "200" {
        mutate {
    replace => { "wls_level" => "Warning" }
      }
    }
  }
}

output {
    elasticsearch {
        hosts => ["elk1:9200", "elk2:9200"]
    }
}

---
    - name: Recuperando o caminho dos binários no servidor local
      find:
        paths: /etc/ansible/proofOfConcept/Ennio/replicacaoELK/repo/{{ technology }}
        patterns: '*tar.gz'
      delegate_to: 127.0.0.1
      register: bin_filename

#    - debug: var=bin_filename

#    - debug:
#        msg: "{{ item['path'] | basename | regex_replace('.tar.gz','') }}"
#      register: teste
#     with_items: "{{ bin_filename.files }}"

#    - debug:
#        msg: "{{ item }}"
#      with_indexed_items: "{{ bin_filename.files }}"

    - name: Extraindo o número da versão dos binários
      set_fact:
#        app_{{item.0}}: "{{ item.1['path'] | basename | regex_replace('.tar.gz','') }}"
         app_versions: "{{ item['path'] | basename | regex_replace('.tar.gz','') }}"
      register: bin_versions
#      with_indexed_items: "{{ bin_filename.files }}"
      with_items: "{{ bin_filename.files }}"

#    - debug: var=bin_versions.results

#    - name: teste
#      set_fact:
#        teste: map(attribute='item.ansible_facts.app_versions' | list)
#      with_items: "{{ bin_versions.results }}"
#      register: bin_versions

    - debug:
        msg: "{{ bin_versions.results | map(attribute='ansible_facts.app_versions') | list }}"

#   - name: Definindo as variáveis
#     debug:
#        var: item.1['ansible_facts']['app_{{ item.0|string }}']
#       var: item | map(attribute='ansible_facts.app_{{ item.item.0|string }}') | list
#     with_items: "{{ bin_versions.results }}"
